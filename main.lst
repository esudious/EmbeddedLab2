


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Jeremy Mattson**update this***
    3 00000000         ; Date Created: 1/22/2016 
    4 00000000         ; Last Modified: 1/22/2016 
    5 00000000         ; Section ***Tuesday 1-2***update this***
    6 00000000         ; Instructor: ***Ramesh Yerraballi**update this***
    7 00000000         ; Lab number: 2
    8 00000000         ; Brief description of the program
    9 00000000         ; The overall objective of this system an interactive al
                       arm
   10 00000000         ; Hardware connections
   11 00000000         ;  PF4 is switch input  (1 means SW1 is not pressed, 0 m
                       eans SW1 is pressed)
   12 00000000         ;  PF3 is LED output (1 activates green LED) 
   13 00000000         ; The specific operation of this system 
   14 00000000         ;    1) Make PF3 an output and make PF4 an input (enable
                        PUR for PF4). 
   15 00000000         ;    2) The system starts with the LED OFF (make PF3 =0)
                       . 
   16 00000000         ;    3) Delay for about 100 ms
   17 00000000         ;    4) If the switch is pressed (PF4 is 0), then toggle
                        the LED once, else turn the LED OFF. 
   18 00000000         ;    5) Repeat steps 3 and 4 over and over
   19 00000000         
   20 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   21 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   22 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   23 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   24 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   25 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   26 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   27 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   28 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   29 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   30 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B
   31 00000000         
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=



ARM Macro Assembler    Page 2 


2
   33 00000000                 THUMB
   34 00000000                 EXPORT           Start
   35 00000000         Start
   36 00000000 4828            LDR              R0, =SYSCTL_RCGCGPIO_R 
                                                            ;get clock address
   37 00000002 F04F 0120       MOV              R1, #0x20   ;on key
   38 00000006 6001            STR              R1, [R0]    ; turn on F Clock
   39 00000008 F04F 0A00       LDR              R10, =0x0   ;wait..
   40 0000000C F04F 0A00       LDR              R10, =0x0   ;wait..
   41 00000010         
   42 00000010 4825            LDR              R0, =GPIO_PORTF_LOCK_R 
                                                            ;get lock address
   43 00000012 4926            LDR              R1, =GPIO_LOCK_KEY 
                                                            ;get unlock key
   44 00000014 6001            STR              R1, [R0]    ;Unlock 
   45 00000016         
   46 00000016 4826            LDR              R0, =GPIO_PORTF_CR_R
   47 00000018 F04F 011F       MOV              R1, #0x1F   ; allow changes to 
                                                            PF4-0
   48 0000001C 7001            STRB             R1, [R0]
   49 0000001E         
   50 0000001E 4825            LDR              R0, =GPIO_PORTF_AMSEL_R
   51 00000020 F04F 0100       MOV              R1, #0x00   ; disable analog fu
                                                            nction
   52 00000024 7001            STRB             R1, [R0]
   53 00000026         
   54 00000026 4824            LDR              R0, =GPIO_PORTF_PCTL_R
   55 00000028 F04F 0100       MOV              R1, #0x00   ; GPIO clear bit PC
                                                            TL
   56 0000002C 6001            STR              R1, [R0]
   57 0000002E         
   58 0000002E 4823            LDR              R0, =GPIO_PORTF_DIR_R
   59 00000030 F04F 010E       MOV              R1, #0x0E   ;PF4, PF0 input
   60 00000034 7001            STRB             R1, [R0]    ;and PF3, 2, 1 outp
                                                            ut
   61 00000036         
   62 00000036 4822            LDR              R0, =GPIO_PORTF_AFSEL_R
   63 00000038 F04F 0100       MOV              R1, #0x00   ; no alternate func
                                                            tion
   64 0000003C 7001            STRB             R1, [R0]    ; 
   65 0000003E         
   66 0000003E 4821            LDR              R0, =GPIO_PORTF_PUR_R
   67 00000040 F04F 0110       MOV              R1, #0x10   ; enable pullup res
                                                            istors on PF4, PF0
   68 00000044 7001            STRB             R1, [R0]
   69 00000046         
   70 00000046 4820            LDR              R0, =GPIO_PORTF_DEN_R
   71 00000048 F04F 011F       MOV              R1, #0x1F   ; enable digital pi
                                                            ns PF4-PF0
   72 0000004C 7001            STRB             R1, [R0]
   73 0000004E         
   74 0000004E F04F 0300       MOV              R3, #0      ; LED OFF
   75 00000052 F04F 0401       MOV              R4, #1      ; SWITCH
   76 00000056         
   77 00000056         ;   Registers that shouldn't be changed
   78 00000056 481D            LDR              R0, =GPIO_PORTF_DATA_R
   79 00000058         ;R11 the 'timer' value
   80 00000058 F643 7BFF       MOV              R11, #0x3FFF



ARM Macro Assembler    Page 3 


   81 0000005C EA4F 1B8B       MOV              R11, R11, LSL #6
   82 00000060         
   83 00000060         loop                                 ;wait until PF4 swi
                                                            tch is pressed
   84 00000060 F000 F815       BL               checkPF4pressed
   85 00000064 D106            BNE              turnon      ;if on
   86 00000066 E7FB            B                loop        ;else continue loop
                                                            
   87 00000068         
   88 00000068         turnoff
   89 00000068 F003 0300       AND              R3, #0x00
   90 0000006C 6003            STR              R3, [R0]
   91 0000006E         
   92 0000006E F000 F807       BL               waitstart
   93 00000072 E7F5            B                loop
   94 00000074         
   95 00000074         turnon
   96 00000074 F041 0308       ORR              R3, R1, #0x08
   97 00000078 6003            STR              R3, [R0]
   98 0000007A         
   99 0000007A F000 F801       BL               waitstart
  100 0000007E E7F3            B                turnoff
  101 00000080         
  102 00000080         waitstart
  103 00000080 46D9            MOV              R9, R11     ;
  104 00000082 F04F 0801       MOV              R8, #1
  105 00000086         waitloop
  106 00000086 EBB9 0908       SUBS             R9, R8
  107 0000008A D1FC            BNE              waitloop    ;until R9 = 0, R9--
                                                            
  108 0000008C 4770            BX               LR
  109 0000008E         
  110 0000008E         ;If PF4 is press this will move 1 in R9 or 0 otherwise
  111 0000008E         checkPF4pressed
  112 0000008E         
  113 0000008E 6801            LDR              R1, [R0]    ;value of Port F Re
                                                            gisters
  114 00000090 F001 0410       AND              R4, R1, #0x10 
                                                            ;and bit 4 for PF4
  115 00000094 2C10            CMP              R4, #0x10   ;check if PF4 butto
                                                            n is pressed.  If b
                                                            it is 0 then it is 
                                                            pressed.
  116 00000096 D002            BEQ              PF4notpressed
  117 00000098         
  118 00000098 F05F 0901       MOVS             R9, #1
  119 0000009C 4770            BX               LR          ;else return with R
                                                            9 = 0
  120 0000009E         PF4notpressed
  121 0000009E F05F 0900       MOVS             R9, #0
  122 000000A2 4770            BX               LR
  123 000000A4         ;end check if PF4 pressed
  124 000000A4         
  125 000000A4         
  126 000000A4                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  127 000000A4                 END                          ; end of file
              400FE608 



ARM Macro Assembler    Page 4 


              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              400253FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\main.d -o.\main.o -IC:\Keil_v5\EE319Kware\Lab2_EE319K_asm\RTE
\_Lab2 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\CMSIS\Include -IC:\Keil_v5\ARM\PAC
K\Keil\LM4F_DFP\1.0.0\Device\Include --predefine="__EVAL SETA 1" --predefine="_
_UVISION_VERSION SETA 522" --predefine="_RTE_ SETA 1" --predefine="LM4F120 SETA
 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: .text unused
PF4notpressed 0000009E

Symbol: PF4notpressed
   Definitions
      At line 120 in file main.s
   Uses
      At line 116 in file main.s
Comment: PF4notpressed used once
Start 00000000

Symbol: Start
   Definitions
      At line 35 in file main.s
   Uses
      At line 34 in file main.s
Comment: Start used once
checkPF4pressed 0000008E

Symbol: checkPF4pressed
   Definitions
      At line 111 in file main.s
   Uses
      At line 84 in file main.s
Comment: checkPF4pressed used once
loop 00000060

Symbol: loop
   Definitions
      At line 83 in file main.s
   Uses
      At line 86 in file main.s
      At line 93 in file main.s

turnoff 00000068

Symbol: turnoff
   Definitions
      At line 88 in file main.s
   Uses
      At line 100 in file main.s
Comment: turnoff used once
turnon 00000074

Symbol: turnon
   Definitions
      At line 95 in file main.s
   Uses
      At line 85 in file main.s
Comment: turnon used once
waitloop 00000086




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: waitloop
   Definitions
      At line 105 in file main.s
   Uses
      At line 107 in file main.s
Comment: waitloop used once
waitstart 00000080

Symbol: waitstart
   Definitions
      At line 102 in file main.s
   Uses
      At line 92 in file main.s
      At line 99 in file main.s

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 30 in file main.s
   Uses
      At line 43 in file main.s
Comment: GPIO_LOCK_KEY used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 22 in file main.s
   Uses
      At line 62 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 25 in file main.s
   Uses
      At line 50 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 27 in file main.s
   Uses
      At line 46 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 20 in file main.s
   Uses
      At line 78 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 24 in file main.s
   Uses
      At line 70 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 21 in file main.s
   Uses
      At line 58 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 29 in file main.s
   Uses
      At line 42 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 26 in file main.s
   Uses
      At line 54 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 23 in file main.s
   Uses
      At line 66 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 28 in file main.s
   Uses
      At line 36 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
11 symbols
357 symbols in table
